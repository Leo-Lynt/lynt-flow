import{F as p}from"./mappings-w7oajga6.js";const f=p;function y(e,r){const i=f[e]||{},t={sourceType:e};for(const[s,a]of Object.entries(i))r[s]!==void 0&&(t[a]=r[s]);for(const[s,a]of Object.entries(r))!i[s]&&s!=="sourceType"&&(Object.values(i).includes(s)||(t[s]=a));return t}const g={type:"google_sheets",fields:{spreadsheetUrl:{type:"string",required:!0},sheetName:{type:"string",required:!1},range:{type:"string",required:!1},includeHeaders:{type:"boolean",required:!1,default:!0},connectionId:{type:"string",required:!1}}},q={type:"google_analytics",fields:{connectionId:{type:"string",required:!0},propertyId:{type:"string",required:!1},viewId:{type:"string",required:!1},metrics:{type:"array",required:!1,default:[]},dimensions:{type:"array",required:!1,default:[]},filters:{type:"object",required:!1}}},h={type:"api",fields:{url:{type:"string",required:!0},method:{type:"string",required:!1,default:"GET"},headers:{type:"object",required:!1,default:{}},queryParams:{type:"object",required:!1,default:{}},body:{type:"any",required:!1},dataPath:{type:"string",required:!1}}},b={type:"database",fields:{connectionId:{type:"string",required:!1},dbType:{type:"string",required:!0},query:{type:"string",required:!1},collection:{type:"string",required:!1},parameters:{type:"object",required:!1,default:{}}}},m={type:"graphql",fields:{url:{type:"string",required:!0},query:{type:"string",required:!0},variables:{type:"object",required:!1,default:{}},headers:{type:"object",required:!1,default:{}}}},d={type:"json",fields:{url:{type:"string",required:!0},format:{type:"string",required:!1,default:"json"},csvDelimiter:{type:"string",required:!1,default:","},dataPath:{type:"string",required:!1}}},C={type:"mk3d",fields:{baseUrl:{type:"string",required:!0},projectId:{type:"string",required:!0},endpoint:{type:"string",required:!1},filters:{type:"object",required:!1}}},c={google_sheets:g,google_analytics:q,api:h,database:b,graphql:m,json:d,csv:d,mk3d:C};function j(e,r){const i=c[e];if(!i)return{valid:!1,errors:[`Unknown source type: ${e}`]};const t=[];for(const[s,a]of Object.entries(i.fields))a.required&&(r[s]===void 0||r[s]===null)&&t.push(`Field "${s}" is required for ${e}`);return{valid:t.length===0,errors:t}}function v(e,r){const i=c[e];if(!i)return r;const t={...r};for(const[s,a]of Object.entries(i.fields))a.default!==void 0&&t[s]===void 0&&(t[s]=a.default);return t}async function I({nodeData:e,inputs:r,context:i}){const t=e.sourceType;if(!t)throw new Error("sourceType is required");const s=y(t,e),a=v(t,s),o=j(t,a);if(!o.valid)throw new Error(`Invalid connector configuration: ${o.errors.join(", ")}`);const l=i.adapters;if(!l)throw new Error("No adapters registry found in context. Please inject AdapterRegistry.");const u=l.getDataSource(t);if(!u)throw new Error(`No adapter registered for source type: ${t}`);try{return await u.fetch(a,i)}catch(n){throw console.error(`❌ Connector error (${t}):`,n.message),n}}function w(e){const r=[],i=e.sourceType;if(!i)return r.push('Campo "sourceType" obrigatório'),{valid:!1,errors:r};switch(i){case"api":e.apiUrl||r.push('Campo "apiUrl" obrigatório para sourceType=api');break;case"google_analytics":!e.gaConnectionId&&!e.gaPropertyId&&r.push('Campo "gaConnectionId" ou "gaPropertyId" obrigatório para Google Analytics');break;case"google_sheets":e.sheetsUrl||r.push('Campo "sheetsUrl" obrigatório para sourceType=google_sheets');break;case"mk3d":(!e.mk3dUrl||!e.mk3dProjectId)&&r.push('Campos "mk3dUrl" e "mk3dProjectId" obrigatórios para sourceType=mk3d');break;case"json":case"csv":e.jsonCsvUrl||r.push('Campo "jsonCsvUrl" obrigatório para JSON/CSV');break;case"graphql":(!e.graphqlUrl||!e.graphqlQuery)&&r.push('Campos "graphqlUrl" e "graphqlQuery" obrigatórios para GraphQL');break;case"database":e.databaseType||r.push('Campo "databaseType" obrigatório para Database');break}return{valid:r.length===0,errors:r}}export{I as execute,w as validate};
