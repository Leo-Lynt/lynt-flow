import{u as i}from"./dataUtils-XrCV_Bny.js";function f(t,r){const n={...t};for(const e in r)r.hasOwnProperty(e)&&(r[e]&&typeof r[e]=="object"&&!Array.isArray(r[e])&&t[e]&&typeof t[e]=="object"&&!Array.isArray(t[e])?n[e]=f(t[e],r[e]):n[e]=r[e]);return n}function u(t,r){const n={};for(const e in t)t.hasOwnProperty(e)&&(n[`${e}_1`]=t[e]);for(const e in r)r.hasOwnProperty(e)&&(n[`${e}_2`]=r[e]);return n}function a({nodeData:t,inputs:r}){let n=i(r["input-1"]),e=i(r["input-2"]);if(typeof n!="object"||n===null||Array.isArray(n))throw new Error("Input 1 deve ser um objeto");if(typeof e!="object"||e===null||Array.isArray(e))throw new Error("Input 2 deve ser um objeto");const o=t.mergeMode||"shallow";return o==="deep"?f(n,e):o==="numbered"?u(n,e):{...n,...e}}function p(t){const r=[];return{valid:r.length===0,errors:r}}export{a as execute,p as validate};
