import{r as p,a as l,b as f}from"./index-vfrSo85q.js";let c=!1,u=null;function h(o){const r=[];return o?(o.version||r.push('Campo "version" obrigatório não encontrado'),(!o.nodes||!Array.isArray(o.nodes))&&r.push('Campo "nodes" deve ser um array'),o.categories&&!Array.isArray(o.categories)&&r.push('Campo "categories" deve ser um array'),o.nodes&&o.nodes.forEach((e,s)=>{e.type||r.push(`Node no índice ${s} não possui campo "type"`),e.label||r.push(`Node "${e.type||s}" não possui campo "label"`),e.method||r.push(`Node "${e.type||s}" não possui campo "method"`),e.category||r.push(`Node "${e.type||s}" não possui campo "category"`)}),{valid:r.length===0,errors:r}):(r.push("Catálogo está vazio ou inválido"),{valid:!1,errors:r})}async function d(o="http://localhost:3001"){var r;if(c)return u;try{const s=await fetch(`${o}/api/nodes`);if(!s.ok)throw new Error(`Erro ao carregar catálogo: ${s.status} ${s.statusText}`);const i=await s.json();if(!i.success)throw new Error(`API error: ${((r=i.error)==null?void 0:r.message)||"Unknown error"}`);const t=i.data,n=h(t);if(!n.valid)throw new Error(`Catálogo inválido: ${n.errors.join(", ")}`);return t.categories&&t.categories.forEach(a=>{l(a.id,a)}),t.nodes.forEach(a=>{f(a.type,a)}),c=!0,u=t,t}catch(e){throw e}}async function y(){try{return{success:!0,catalog:await d(),stats:p.getStats()}}catch(o){return{success:!1,error:o.message}}}export{y as initializeEngine,d as loadNodeCatalog};
